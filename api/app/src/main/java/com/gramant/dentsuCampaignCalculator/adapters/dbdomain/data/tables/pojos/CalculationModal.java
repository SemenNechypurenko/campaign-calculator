/*
 * This file is generated by jOOQ.
 */
package com.gramant.dentsuCampaignCalculator.adapters.dbdomain.data.tables.pojos;


import java.io.Serializable;
import java.time.LocalDate;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CalculationModal implements Serializable {

    private static final long serialVersionUID = 1L;

    private LocalDate dateStart;
    private LocalDate dateEnd;
    private String    product;
    private String    campaign;
    private String    crm;
    private String    channel;
    private String    playground;
    private String    format;
    private Double    budget;
    private Double    gaTransactions;
    private Double    attrTransactionsModel;
    private Double    appTransactions;
    private Integer   effectiveFrequency;
    private Double    sales;
    private Double    averageCheck;
    private Double    cpa;
    private Double    romiGa;
    private Double    romiAttrModel;
    private Double    incomeGa;
    private Double    desktopGaTransactions;
    private Double    mobileGaGransactions;
    private Double    tabletGaTransactions;
    private String    place;
    private Double    budgetSecond;
    private Double    budgetThird;
    private Double    budgetFourth;
    private String    formatSecond;
    private Double    newPlayers;
    private Integer   version;

    public CalculationModal() {}

    public CalculationModal(CalculationModal value) {
        this.dateStart = value.dateStart;
        this.dateEnd = value.dateEnd;
        this.product = value.product;
        this.campaign = value.campaign;
        this.crm = value.crm;
        this.channel = value.channel;
        this.playground = value.playground;
        this.format = value.format;
        this.budget = value.budget;
        this.gaTransactions = value.gaTransactions;
        this.attrTransactionsModel = value.attrTransactionsModel;
        this.appTransactions = value.appTransactions;
        this.effectiveFrequency = value.effectiveFrequency;
        this.sales = value.sales;
        this.averageCheck = value.averageCheck;
        this.cpa = value.cpa;
        this.romiGa = value.romiGa;
        this.romiAttrModel = value.romiAttrModel;
        this.incomeGa = value.incomeGa;
        this.desktopGaTransactions = value.desktopGaTransactions;
        this.mobileGaGransactions = value.mobileGaGransactions;
        this.tabletGaTransactions = value.tabletGaTransactions;
        this.place = value.place;
        this.budgetSecond = value.budgetSecond;
        this.budgetThird = value.budgetThird;
        this.budgetFourth = value.budgetFourth;
        this.formatSecond = value.formatSecond;
        this.newPlayers = value.newPlayers;
        this.version = value.version;
    }

    public CalculationModal(
        LocalDate dateStart,
        LocalDate dateEnd,
        String    product,
        String    campaign,
        String    crm,
        String    channel,
        String    playground,
        String    format,
        Double    budget,
        Double    gaTransactions,
        Double    attrTransactionsModel,
        Double    appTransactions,
        Integer   effectiveFrequency,
        Double    sales,
        Double    averageCheck,
        Double    cpa,
        Double    romiGa,
        Double    romiAttrModel,
        Double    incomeGa,
        Double    desktopGaTransactions,
        Double    mobileGaGransactions,
        Double    tabletGaTransactions,
        String    place,
        Double    budgetSecond,
        Double    budgetThird,
        Double    budgetFourth,
        String    formatSecond,
        Double    newPlayers,
        Integer   version
    ) {
        this.dateStart = dateStart;
        this.dateEnd = dateEnd;
        this.product = product;
        this.campaign = campaign;
        this.crm = crm;
        this.channel = channel;
        this.playground = playground;
        this.format = format;
        this.budget = budget;
        this.gaTransactions = gaTransactions;
        this.attrTransactionsModel = attrTransactionsModel;
        this.appTransactions = appTransactions;
        this.effectiveFrequency = effectiveFrequency;
        this.sales = sales;
        this.averageCheck = averageCheck;
        this.cpa = cpa;
        this.romiGa = romiGa;
        this.romiAttrModel = romiAttrModel;
        this.incomeGa = incomeGa;
        this.desktopGaTransactions = desktopGaTransactions;
        this.mobileGaGransactions = mobileGaGransactions;
        this.tabletGaTransactions = tabletGaTransactions;
        this.place = place;
        this.budgetSecond = budgetSecond;
        this.budgetThird = budgetThird;
        this.budgetFourth = budgetFourth;
        this.formatSecond = formatSecond;
        this.newPlayers = newPlayers;
        this.version = version;
    }

    /**
     * Getter for <code>public.calculation_modal.date_start</code>.
     */
    public LocalDate getDateStart() {
        return this.dateStart;
    }

    /**
     * Setter for <code>public.calculation_modal.date_start</code>.
     */
    public CalculationModal setDateStart(LocalDate dateStart) {
        this.dateStart = dateStart;
        return this;
    }

    /**
     * Getter for <code>public.calculation_modal.date_end</code>.
     */
    public LocalDate getDateEnd() {
        return this.dateEnd;
    }

    /**
     * Setter for <code>public.calculation_modal.date_end</code>.
     */
    public CalculationModal setDateEnd(LocalDate dateEnd) {
        this.dateEnd = dateEnd;
        return this;
    }

    /**
     * Getter for <code>public.calculation_modal.product</code>.
     */
    public String getProduct() {
        return this.product;
    }

    /**
     * Setter for <code>public.calculation_modal.product</code>.
     */
    public CalculationModal setProduct(String product) {
        this.product = product;
        return this;
    }

    /**
     * Getter for <code>public.calculation_modal.campaign</code>.
     */
    public String getCampaign() {
        return this.campaign;
    }

    /**
     * Setter for <code>public.calculation_modal.campaign</code>.
     */
    public CalculationModal setCampaign(String campaign) {
        this.campaign = campaign;
        return this;
    }

    /**
     * Getter for <code>public.calculation_modal.crm</code>.
     */
    public String getCrm() {
        return this.crm;
    }

    /**
     * Setter for <code>public.calculation_modal.crm</code>.
     */
    public CalculationModal setCrm(String crm) {
        this.crm = crm;
        return this;
    }

    /**
     * Getter for <code>public.calculation_modal.channel</code>.
     */
    public String getChannel() {
        return this.channel;
    }

    /**
     * Setter for <code>public.calculation_modal.channel</code>.
     */
    public CalculationModal setChannel(String channel) {
        this.channel = channel;
        return this;
    }

    /**
     * Getter for <code>public.calculation_modal.playground</code>.
     */
    public String getPlayground() {
        return this.playground;
    }

    /**
     * Setter for <code>public.calculation_modal.playground</code>.
     */
    public CalculationModal setPlayground(String playground) {
        this.playground = playground;
        return this;
    }

    /**
     * Getter for <code>public.calculation_modal.format</code>.
     */
    public String getFormat() {
        return this.format;
    }

    /**
     * Setter for <code>public.calculation_modal.format</code>.
     */
    public CalculationModal setFormat(String format) {
        this.format = format;
        return this;
    }

    /**
     * Getter for <code>public.calculation_modal.budget</code>.
     */
    public Double getBudget() {
        return this.budget;
    }

    /**
     * Setter for <code>public.calculation_modal.budget</code>.
     */
    public CalculationModal setBudget(Double budget) {
        this.budget = budget;
        return this;
    }

    /**
     * Getter for <code>public.calculation_modal.ga_transactions</code>.
     */
    public Double getGaTransactions() {
        return this.gaTransactions;
    }

    /**
     * Setter for <code>public.calculation_modal.ga_transactions</code>.
     */
    public CalculationModal setGaTransactions(Double gaTransactions) {
        this.gaTransactions = gaTransactions;
        return this;
    }

    /**
     * Getter for <code>public.calculation_modal.attr_transactions_model</code>.
     */
    public Double getAttrTransactionsModel() {
        return this.attrTransactionsModel;
    }

    /**
     * Setter for <code>public.calculation_modal.attr_transactions_model</code>.
     */
    public CalculationModal setAttrTransactionsModel(Double attrTransactionsModel) {
        this.attrTransactionsModel = attrTransactionsModel;
        return this;
    }

    /**
     * Getter for <code>public.calculation_modal.app_transactions</code>.
     */
    public Double getAppTransactions() {
        return this.appTransactions;
    }

    /**
     * Setter for <code>public.calculation_modal.app_transactions</code>.
     */
    public CalculationModal setAppTransactions(Double appTransactions) {
        this.appTransactions = appTransactions;
        return this;
    }

    /**
     * Getter for <code>public.calculation_modal.effective_frequency</code>.
     */
    public Integer getEffectiveFrequency() {
        return this.effectiveFrequency;
    }

    /**
     * Setter for <code>public.calculation_modal.effective_frequency</code>.
     */
    public CalculationModal setEffectiveFrequency(Integer effectiveFrequency) {
        this.effectiveFrequency = effectiveFrequency;
        return this;
    }

    /**
     * Getter for <code>public.calculation_modal.sales</code>.
     */
    public Double getSales() {
        return this.sales;
    }

    /**
     * Setter for <code>public.calculation_modal.sales</code>.
     */
    public CalculationModal setSales(Double sales) {
        this.sales = sales;
        return this;
    }

    /**
     * Getter for <code>public.calculation_modal.average_check</code>.
     */
    public Double getAverageCheck() {
        return this.averageCheck;
    }

    /**
     * Setter for <code>public.calculation_modal.average_check</code>.
     */
    public CalculationModal setAverageCheck(Double averageCheck) {
        this.averageCheck = averageCheck;
        return this;
    }

    /**
     * Getter for <code>public.calculation_modal.cpa</code>.
     */
    public Double getCpa() {
        return this.cpa;
    }

    /**
     * Setter for <code>public.calculation_modal.cpa</code>.
     */
    public CalculationModal setCpa(Double cpa) {
        this.cpa = cpa;
        return this;
    }

    /**
     * Getter for <code>public.calculation_modal.romi_ga</code>.
     */
    public Double getRomiGa() {
        return this.romiGa;
    }

    /**
     * Setter for <code>public.calculation_modal.romi_ga</code>.
     */
    public CalculationModal setRomiGa(Double romiGa) {
        this.romiGa = romiGa;
        return this;
    }

    /**
     * Getter for <code>public.calculation_modal.romi_attr_model</code>.
     */
    public Double getRomiAttrModel() {
        return this.romiAttrModel;
    }

    /**
     * Setter for <code>public.calculation_modal.romi_attr_model</code>.
     */
    public CalculationModal setRomiAttrModel(Double romiAttrModel) {
        this.romiAttrModel = romiAttrModel;
        return this;
    }

    /**
     * Getter for <code>public.calculation_modal.income_ga</code>.
     */
    public Double getIncomeGa() {
        return this.incomeGa;
    }

    /**
     * Setter for <code>public.calculation_modal.income_ga</code>.
     */
    public CalculationModal setIncomeGa(Double incomeGa) {
        this.incomeGa = incomeGa;
        return this;
    }

    /**
     * Getter for <code>public.calculation_modal.desktop_ga_transactions</code>.
     */
    public Double getDesktopGaTransactions() {
        return this.desktopGaTransactions;
    }

    /**
     * Setter for <code>public.calculation_modal.desktop_ga_transactions</code>.
     */
    public CalculationModal setDesktopGaTransactions(Double desktopGaTransactions) {
        this.desktopGaTransactions = desktopGaTransactions;
        return this;
    }

    /**
     * Getter for <code>public.calculation_modal.mobile_ga_gransactions</code>.
     */
    public Double getMobileGaGransactions() {
        return this.mobileGaGransactions;
    }

    /**
     * Setter for <code>public.calculation_modal.mobile_ga_gransactions</code>.
     */
    public CalculationModal setMobileGaGransactions(Double mobileGaGransactions) {
        this.mobileGaGransactions = mobileGaGransactions;
        return this;
    }

    /**
     * Getter for <code>public.calculation_modal.tablet_ga_transactions</code>.
     */
    public Double getTabletGaTransactions() {
        return this.tabletGaTransactions;
    }

    /**
     * Setter for <code>public.calculation_modal.tablet_ga_transactions</code>.
     */
    public CalculationModal setTabletGaTransactions(Double tabletGaTransactions) {
        this.tabletGaTransactions = tabletGaTransactions;
        return this;
    }

    /**
     * Getter for <code>public.calculation_modal.place</code>.
     */
    public String getPlace() {
        return this.place;
    }

    /**
     * Setter for <code>public.calculation_modal.place</code>.
     */
    public CalculationModal setPlace(String place) {
        this.place = place;
        return this;
    }

    /**
     * Getter for <code>public.calculation_modal.budget_second</code>.
     */
    public Double getBudgetSecond() {
        return this.budgetSecond;
    }

    /**
     * Setter for <code>public.calculation_modal.budget_second</code>.
     */
    public CalculationModal setBudgetSecond(Double budgetSecond) {
        this.budgetSecond = budgetSecond;
        return this;
    }

    /**
     * Getter for <code>public.calculation_modal.budget_third</code>.
     */
    public Double getBudgetThird() {
        return this.budgetThird;
    }

    /**
     * Setter for <code>public.calculation_modal.budget_third</code>.
     */
    public CalculationModal setBudgetThird(Double budgetThird) {
        this.budgetThird = budgetThird;
        return this;
    }

    /**
     * Getter for <code>public.calculation_modal.budget_fourth</code>.
     */
    public Double getBudgetFourth() {
        return this.budgetFourth;
    }

    /**
     * Setter for <code>public.calculation_modal.budget_fourth</code>.
     */
    public CalculationModal setBudgetFourth(Double budgetFourth) {
        this.budgetFourth = budgetFourth;
        return this;
    }

    /**
     * Getter for <code>public.calculation_modal.format_second</code>.
     */
    public String getFormatSecond() {
        return this.formatSecond;
    }

    /**
     * Setter for <code>public.calculation_modal.format_second</code>.
     */
    public CalculationModal setFormatSecond(String formatSecond) {
        this.formatSecond = formatSecond;
        return this;
    }

    /**
     * Getter for <code>public.calculation_modal.new_players</code>.
     */
    public Double getNewPlayers() {
        return this.newPlayers;
    }

    /**
     * Setter for <code>public.calculation_modal.new_players</code>.
     */
    public CalculationModal setNewPlayers(Double newPlayers) {
        this.newPlayers = newPlayers;
        return this;
    }

    /**
     * Getter for <code>public.calculation_modal.version</code>.
     */
    public Integer getVersion() {
        return this.version;
    }

    /**
     * Setter for <code>public.calculation_modal.version</code>.
     */
    public CalculationModal setVersion(Integer version) {
        this.version = version;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final CalculationModal other = (CalculationModal) obj;
        if (dateStart == null) {
            if (other.dateStart != null)
                return false;
        }
        else if (!dateStart.equals(other.dateStart))
            return false;
        if (dateEnd == null) {
            if (other.dateEnd != null)
                return false;
        }
        else if (!dateEnd.equals(other.dateEnd))
            return false;
        if (product == null) {
            if (other.product != null)
                return false;
        }
        else if (!product.equals(other.product))
            return false;
        if (campaign == null) {
            if (other.campaign != null)
                return false;
        }
        else if (!campaign.equals(other.campaign))
            return false;
        if (crm == null) {
            if (other.crm != null)
                return false;
        }
        else if (!crm.equals(other.crm))
            return false;
        if (channel == null) {
            if (other.channel != null)
                return false;
        }
        else if (!channel.equals(other.channel))
            return false;
        if (playground == null) {
            if (other.playground != null)
                return false;
        }
        else if (!playground.equals(other.playground))
            return false;
        if (format == null) {
            if (other.format != null)
                return false;
        }
        else if (!format.equals(other.format))
            return false;
        if (budget == null) {
            if (other.budget != null)
                return false;
        }
        else if (!budget.equals(other.budget))
            return false;
        if (gaTransactions == null) {
            if (other.gaTransactions != null)
                return false;
        }
        else if (!gaTransactions.equals(other.gaTransactions))
            return false;
        if (attrTransactionsModel == null) {
            if (other.attrTransactionsModel != null)
                return false;
        }
        else if (!attrTransactionsModel.equals(other.attrTransactionsModel))
            return false;
        if (appTransactions == null) {
            if (other.appTransactions != null)
                return false;
        }
        else if (!appTransactions.equals(other.appTransactions))
            return false;
        if (effectiveFrequency == null) {
            if (other.effectiveFrequency != null)
                return false;
        }
        else if (!effectiveFrequency.equals(other.effectiveFrequency))
            return false;
        if (sales == null) {
            if (other.sales != null)
                return false;
        }
        else if (!sales.equals(other.sales))
            return false;
        if (averageCheck == null) {
            if (other.averageCheck != null)
                return false;
        }
        else if (!averageCheck.equals(other.averageCheck))
            return false;
        if (cpa == null) {
            if (other.cpa != null)
                return false;
        }
        else if (!cpa.equals(other.cpa))
            return false;
        if (romiGa == null) {
            if (other.romiGa != null)
                return false;
        }
        else if (!romiGa.equals(other.romiGa))
            return false;
        if (romiAttrModel == null) {
            if (other.romiAttrModel != null)
                return false;
        }
        else if (!romiAttrModel.equals(other.romiAttrModel))
            return false;
        if (incomeGa == null) {
            if (other.incomeGa != null)
                return false;
        }
        else if (!incomeGa.equals(other.incomeGa))
            return false;
        if (desktopGaTransactions == null) {
            if (other.desktopGaTransactions != null)
                return false;
        }
        else if (!desktopGaTransactions.equals(other.desktopGaTransactions))
            return false;
        if (mobileGaGransactions == null) {
            if (other.mobileGaGransactions != null)
                return false;
        }
        else if (!mobileGaGransactions.equals(other.mobileGaGransactions))
            return false;
        if (tabletGaTransactions == null) {
            if (other.tabletGaTransactions != null)
                return false;
        }
        else if (!tabletGaTransactions.equals(other.tabletGaTransactions))
            return false;
        if (place == null) {
            if (other.place != null)
                return false;
        }
        else if (!place.equals(other.place))
            return false;
        if (budgetSecond == null) {
            if (other.budgetSecond != null)
                return false;
        }
        else if (!budgetSecond.equals(other.budgetSecond))
            return false;
        if (budgetThird == null) {
            if (other.budgetThird != null)
                return false;
        }
        else if (!budgetThird.equals(other.budgetThird))
            return false;
        if (budgetFourth == null) {
            if (other.budgetFourth != null)
                return false;
        }
        else if (!budgetFourth.equals(other.budgetFourth))
            return false;
        if (formatSecond == null) {
            if (other.formatSecond != null)
                return false;
        }
        else if (!formatSecond.equals(other.formatSecond))
            return false;
        if (newPlayers == null) {
            if (other.newPlayers != null)
                return false;
        }
        else if (!newPlayers.equals(other.newPlayers))
            return false;
        if (version == null) {
            if (other.version != null)
                return false;
        }
        else if (!version.equals(other.version))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.dateStart == null) ? 0 : this.dateStart.hashCode());
        result = prime * result + ((this.dateEnd == null) ? 0 : this.dateEnd.hashCode());
        result = prime * result + ((this.product == null) ? 0 : this.product.hashCode());
        result = prime * result + ((this.campaign == null) ? 0 : this.campaign.hashCode());
        result = prime * result + ((this.crm == null) ? 0 : this.crm.hashCode());
        result = prime * result + ((this.channel == null) ? 0 : this.channel.hashCode());
        result = prime * result + ((this.playground == null) ? 0 : this.playground.hashCode());
        result = prime * result + ((this.format == null) ? 0 : this.format.hashCode());
        result = prime * result + ((this.budget == null) ? 0 : this.budget.hashCode());
        result = prime * result + ((this.gaTransactions == null) ? 0 : this.gaTransactions.hashCode());
        result = prime * result + ((this.attrTransactionsModel == null) ? 0 : this.attrTransactionsModel.hashCode());
        result = prime * result + ((this.appTransactions == null) ? 0 : this.appTransactions.hashCode());
        result = prime * result + ((this.effectiveFrequency == null) ? 0 : this.effectiveFrequency.hashCode());
        result = prime * result + ((this.sales == null) ? 0 : this.sales.hashCode());
        result = prime * result + ((this.averageCheck == null) ? 0 : this.averageCheck.hashCode());
        result = prime * result + ((this.cpa == null) ? 0 : this.cpa.hashCode());
        result = prime * result + ((this.romiGa == null) ? 0 : this.romiGa.hashCode());
        result = prime * result + ((this.romiAttrModel == null) ? 0 : this.romiAttrModel.hashCode());
        result = prime * result + ((this.incomeGa == null) ? 0 : this.incomeGa.hashCode());
        result = prime * result + ((this.desktopGaTransactions == null) ? 0 : this.desktopGaTransactions.hashCode());
        result = prime * result + ((this.mobileGaGransactions == null) ? 0 : this.mobileGaGransactions.hashCode());
        result = prime * result + ((this.tabletGaTransactions == null) ? 0 : this.tabletGaTransactions.hashCode());
        result = prime * result + ((this.place == null) ? 0 : this.place.hashCode());
        result = prime * result + ((this.budgetSecond == null) ? 0 : this.budgetSecond.hashCode());
        result = prime * result + ((this.budgetThird == null) ? 0 : this.budgetThird.hashCode());
        result = prime * result + ((this.budgetFourth == null) ? 0 : this.budgetFourth.hashCode());
        result = prime * result + ((this.formatSecond == null) ? 0 : this.formatSecond.hashCode());
        result = prime * result + ((this.newPlayers == null) ? 0 : this.newPlayers.hashCode());
        result = prime * result + ((this.version == null) ? 0 : this.version.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("CalculationModal (");

        sb.append(dateStart);
        sb.append(", ").append(dateEnd);
        sb.append(", ").append(product);
        sb.append(", ").append(campaign);
        sb.append(", ").append(crm);
        sb.append(", ").append(channel);
        sb.append(", ").append(playground);
        sb.append(", ").append(format);
        sb.append(", ").append(budget);
        sb.append(", ").append(gaTransactions);
        sb.append(", ").append(attrTransactionsModel);
        sb.append(", ").append(appTransactions);
        sb.append(", ").append(effectiveFrequency);
        sb.append(", ").append(sales);
        sb.append(", ").append(averageCheck);
        sb.append(", ").append(cpa);
        sb.append(", ").append(romiGa);
        sb.append(", ").append(romiAttrModel);
        sb.append(", ").append(incomeGa);
        sb.append(", ").append(desktopGaTransactions);
        sb.append(", ").append(mobileGaGransactions);
        sb.append(", ").append(tabletGaTransactions);
        sb.append(", ").append(place);
        sb.append(", ").append(budgetSecond);
        sb.append(", ").append(budgetThird);
        sb.append(", ").append(budgetFourth);
        sb.append(", ").append(formatSecond);
        sb.append(", ").append(newPlayers);
        sb.append(", ").append(version);

        sb.append(")");
        return sb.toString();
    }
}
