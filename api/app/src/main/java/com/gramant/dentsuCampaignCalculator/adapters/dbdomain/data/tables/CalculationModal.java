/*
 * This file is generated by jOOQ.
 */
package com.gramant.dentsuCampaignCalculator.adapters.dbdomain.data.tables;


import com.gramant.dentsuCampaignCalculator.adapters.dbdomain.data.Keys;
import com.gramant.dentsuCampaignCalculator.adapters.dbdomain.data.Public;
import com.gramant.dentsuCampaignCalculator.adapters.dbdomain.data.tables.records.CalculationModalRecord;

import java.time.LocalDate;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CalculationModal extends TableImpl<CalculationModalRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.calculation_modal</code>
     */
    public static final CalculationModal CALCULATION_MODAL = new CalculationModal();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CalculationModalRecord> getRecordType() {
        return CalculationModalRecord.class;
    }

    /**
     * The column <code>public.calculation_modal.date_start</code>.
     */
    public final TableField<CalculationModalRecord, LocalDate> DATE_START = createField(DSL.name("date_start"), SQLDataType.LOCALDATE.nullable(false), this, "");

    /**
     * The column <code>public.calculation_modal.date_end</code>.
     */
    public final TableField<CalculationModalRecord, LocalDate> DATE_END = createField(DSL.name("date_end"), SQLDataType.LOCALDATE.nullable(false), this, "");

    /**
     * The column <code>public.calculation_modal.product</code>.
     */
    public final TableField<CalculationModalRecord, String> PRODUCT = createField(DSL.name("product"), SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>public.calculation_modal.campaign</code>.
     */
    public final TableField<CalculationModalRecord, String> CAMPAIGN = createField(DSL.name("campaign"), SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>public.calculation_modal.crm</code>.
     */
    public final TableField<CalculationModalRecord, String> CRM = createField(DSL.name("crm"), SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>public.calculation_modal.channel</code>.
     */
    public final TableField<CalculationModalRecord, String> CHANNEL = createField(DSL.name("channel"), SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>public.calculation_modal.playground</code>.
     */
    public final TableField<CalculationModalRecord, String> PLAYGROUND = createField(DSL.name("playground"), SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>public.calculation_modal.format</code>.
     */
    public final TableField<CalculationModalRecord, String> FORMAT = createField(DSL.name("format"), SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>public.calculation_modal.budget</code>.
     */
    public final TableField<CalculationModalRecord, Double> BUDGET = createField(DSL.name("budget"), SQLDataType.DOUBLE.nullable(false), this, "");

    /**
     * The column <code>public.calculation_modal.ga_transactions</code>.
     */
    public final TableField<CalculationModalRecord, Double> GA_TRANSACTIONS = createField(DSL.name("ga_transactions"), SQLDataType.DOUBLE.nullable(false), this, "");

    /**
     * The column <code>public.calculation_modal.attr_transactions_model</code>.
     */
    public final TableField<CalculationModalRecord, Double> ATTR_TRANSACTIONS_MODEL = createField(DSL.name("attr_transactions_model"), SQLDataType.DOUBLE.nullable(false), this, "");

    /**
     * The column <code>public.calculation_modal.app_transactions</code>.
     */
    public final TableField<CalculationModalRecord, Double> APP_TRANSACTIONS = createField(DSL.name("app_transactions"), SQLDataType.DOUBLE.nullable(false), this, "");

    /**
     * The column <code>public.calculation_modal.effective_frequency</code>.
     */
    public final TableField<CalculationModalRecord, Integer> EFFECTIVE_FREQUENCY = createField(DSL.name("effective_frequency"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.calculation_modal.sales</code>.
     */
    public final TableField<CalculationModalRecord, Double> SALES = createField(DSL.name("sales"), SQLDataType.DOUBLE.nullable(false), this, "");

    /**
     * The column <code>public.calculation_modal.average_check</code>.
     */
    public final TableField<CalculationModalRecord, Double> AVERAGE_CHECK = createField(DSL.name("average_check"), SQLDataType.DOUBLE.nullable(false), this, "");

    /**
     * The column <code>public.calculation_modal.cpa</code>.
     */
    public final TableField<CalculationModalRecord, Double> CPA = createField(DSL.name("cpa"), SQLDataType.DOUBLE.nullable(false), this, "");

    /**
     * The column <code>public.calculation_modal.romi_ga</code>.
     */
    public final TableField<CalculationModalRecord, Double> ROMI_GA = createField(DSL.name("romi_ga"), SQLDataType.DOUBLE.nullable(false), this, "");

    /**
     * The column <code>public.calculation_modal.romi_attr_model</code>.
     */
    public final TableField<CalculationModalRecord, Double> ROMI_ATTR_MODEL = createField(DSL.name("romi_attr_model"), SQLDataType.DOUBLE.nullable(false), this, "");

    /**
     * The column <code>public.calculation_modal.income_ga</code>.
     */
    public final TableField<CalculationModalRecord, Double> INCOME_GA = createField(DSL.name("income_ga"), SQLDataType.DOUBLE.nullable(false), this, "");

    /**
     * The column <code>public.calculation_modal.desktop_ga_transactions</code>.
     */
    public final TableField<CalculationModalRecord, Double> DESKTOP_GA_TRANSACTIONS = createField(DSL.name("desktop_ga_transactions"), SQLDataType.DOUBLE.nullable(false), this, "");

    /**
     * The column <code>public.calculation_modal.mobile_ga_gransactions</code>.
     */
    public final TableField<CalculationModalRecord, Double> MOBILE_GA_GRANSACTIONS = createField(DSL.name("mobile_ga_gransactions"), SQLDataType.DOUBLE.nullable(false), this, "");

    /**
     * The column <code>public.calculation_modal.tablet_ga_transactions</code>.
     */
    public final TableField<CalculationModalRecord, Double> TABLET_GA_TRANSACTIONS = createField(DSL.name("tablet_ga_transactions"), SQLDataType.DOUBLE.nullable(false), this, "");

    /**
     * The column <code>public.calculation_modal.place</code>.
     */
    public final TableField<CalculationModalRecord, String> PLACE = createField(DSL.name("place"), SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>public.calculation_modal.budget_second</code>.
     */
    public final TableField<CalculationModalRecord, Double> BUDGET_SECOND = createField(DSL.name("budget_second"), SQLDataType.DOUBLE.nullable(false), this, "");

    /**
     * The column <code>public.calculation_modal.budget_third</code>.
     */
    public final TableField<CalculationModalRecord, Double> BUDGET_THIRD = createField(DSL.name("budget_third"), SQLDataType.DOUBLE.nullable(false), this, "");

    /**
     * The column <code>public.calculation_modal.budget_fourth</code>.
     */
    public final TableField<CalculationModalRecord, Double> BUDGET_FOURTH = createField(DSL.name("budget_fourth"), SQLDataType.DOUBLE.nullable(false), this, "");

    /**
     * The column <code>public.calculation_modal.format_second</code>.
     */
    public final TableField<CalculationModalRecord, String> FORMAT_SECOND = createField(DSL.name("format_second"), SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>public.calculation_modal.new_players</code>.
     */
    public final TableField<CalculationModalRecord, Double> NEW_PLAYERS = createField(DSL.name("new_players"), SQLDataType.DOUBLE.nullable(false), this, "");

    /**
     * The column <code>public.calculation_modal.version</code>.
     */
    public final TableField<CalculationModalRecord, Integer> VERSION = createField(DSL.name("version"), SQLDataType.INTEGER.nullable(false), this, "");

    private CalculationModal(Name alias, Table<CalculationModalRecord> aliased) {
        this(alias, aliased, null);
    }

    private CalculationModal(Name alias, Table<CalculationModalRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.calculation_modal</code> table reference
     */
    public CalculationModal(String alias) {
        this(DSL.name(alias), CALCULATION_MODAL);
    }

    /**
     * Create an aliased <code>public.calculation_modal</code> table reference
     */
    public CalculationModal(Name alias) {
        this(alias, CALCULATION_MODAL);
    }

    /**
     * Create a <code>public.calculation_modal</code> table reference
     */
    public CalculationModal() {
        this(DSL.name("calculation_modal"), null);
    }

    public <O extends Record> CalculationModal(Table<O> child, ForeignKey<O, CalculationModalRecord> key) {
        super(child, key, CALCULATION_MODAL);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public UniqueKey<CalculationModalRecord> getPrimaryKey() {
        return Keys.CALCULATION_MODAL_PKEY;
    }

    @Override
    public List<UniqueKey<CalculationModalRecord>> getKeys() {
        return Arrays.<UniqueKey<CalculationModalRecord>>asList(Keys.CALCULATION_MODAL_PKEY);
    }

    @Override
    public CalculationModal as(String alias) {
        return new CalculationModal(DSL.name(alias), this);
    }

    @Override
    public CalculationModal as(Name alias) {
        return new CalculationModal(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CalculationModal rename(String name) {
        return new CalculationModal(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CalculationModal rename(Name name) {
        return new CalculationModal(name, null);
    }
}
